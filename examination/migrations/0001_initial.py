# Generated by Django 4.1.7 on 2023-03-10 04:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("company", "0001_initial"),
        ("category", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ExamApplicationDetailModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("website_link", models.TextField(blank=True, null=True)),
                ("posted_date", models.DateTimeField(blank=True, null=True)),
                ("last_date", models.DateTimeField(blank=True, null=True)),
                ("drive_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ExamApplicationSkillsRequired",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=300)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "experience_in_years",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ExamExperienceLevelModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=300)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ExamMediaModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "file_field",
                    models.FileField(
                        blank=True, null=True, upload_to="media/examination"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ExamQualificationModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ExamTypeTitleModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "media",
                    models.ManyToManyField(
                        blank=True,
                        related_name="ExamTypeTitleModel_media",
                        to="examination.exammediamodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExamApplicationModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.TextField()),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "attchments",
                    models.FileField(
                        blank=True, null=True, upload_to="media/examApplications/"
                    ),
                ),
                (
                    "examination_fee",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "exam_mode",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ONLINE", "ONLINE"),
                            ("OFFLINE", "OFFLINE"),
                            ("OTHERS", "OTHERS"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "is_third_party_application",
                    models.BooleanField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "address",
                    models.ManyToManyField(
                        blank=True,
                        related_name="ExamApplicationModel_address",
                        to="company.companyaddressmodel",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ExamApplicationModel_category",
                        to="category.categorymodel",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ExamApplicationModel_company",
                        to="company.companydetailsmodel",
                    ),
                ),
                (
                    "exam_application_details",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ExamApplicationModel_exam_application_details",
                        to="examination.examapplicationdetailmodel",
                    ),
                ),
                (
                    "exam_type",
                    models.ManyToManyField(
                        blank=True,
                        related_name="ExamApplicationModel_exam_type",
                        to="examination.examtypetitlemodel",
                    ),
                ),
                (
                    "experience_level",
                    models.ManyToManyField(
                        blank=True,
                        related_name="ExamApplicationModel_experience_level",
                        to="examination.examexperiencelevelmodel",
                    ),
                ),
                (
                    "media",
                    models.ManyToManyField(
                        blank=True,
                        related_name="ExamApplicationModel_media",
                        to="examination.exammediamodel",
                    ),
                ),
                (
                    "qualification",
                    models.ManyToManyField(
                        blank=True,
                        related_name="ExamApplicationModel_qualification",
                        to="examination.examqualificationmodel",
                    ),
                ),
                (
                    "skills_required",
                    models.ManyToManyField(
                        blank=True,
                        related_name="ExamApplicationModel_skills_required",
                        to="examination.examapplicationskillsrequired",
                    ),
                ),
                (
                    "sub_category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ExamApplicationModel_sub_category",
                        to="category.subcategorymodel",
                    ),
                ),
            ],
        ),
    ]
